import xml.etree.ElementTree as et
from xml.etree.ElementTree import Element
from xml.etree.ElementTree import ElementTree

def createJob(
JOBXML,
JOBISN="",
APPLICATION="",
SUB_APPLICATION="",
#MEMNAME="", same as JOBNAME
JOBNAME="",
DESCRIPTION="",
CREATED_BY="",
RUN_AS="",
CRITICAL="",
TASKTYPE="",
CYCLIC="",
NODEID="",
INTERVAL="",
CMDLINE="",
CONFIRM="",
DAYSCAL="",
RETRO="",
MAXWAIT="",
MAXRERUN="",
AUTOARCH="",
MAXDAYS="",
MAXRUNS="",
DAYS="",
JAN="",
FEB="",
MAR="",
APR="",
MAY="",
JUN="",
JUL="",
AUG="",
SEP="",
OCT="",
NOV="",
DEC="",
DAYS_AND_OR="",
SHIFT="",
SHIFTNUM="",
SYSDB="",
IND_CYCLIC="",
CREATION_USER="",
CREATION_DATE="",
CREATION_TIME="",
CHANGE_USERID="",
CHANGE_DATE="",
CHANGE_TIME="",
RULE_BASED_CALENDAR_RELATIONSHIP="",
APPL_TYPE="",
MULTY_AGENT="",
USE_INSTREAM_JCL="",
VERSION_OPCODE="",
IS_CURRENT_VERSION="",
VERSION_SERIAL="",
VERSION_HOST="",
CYCLIC_TOLERANCE="",
CYCLIC_TYPE="",
PARENT_FOLDER=""
    ):
    job = Element('JOB', JOBISN=JOBISN, APPLICATION=APPLICATION, SUB_APPLICATION=SUB_APPLICATION, MEMNAME=JOBNAME, JOBNAME=JOBNAME, DESCRIPTION=DESCRIPTION, CREATED_BY=CREATED_BY, RUN_AS=RUN_AS, CRITICAL=CRITICAL, TASKTYPE=TASKTYPE, CYCLIC=CYCLIC, NODEID=NODEID, INTERVAL=INTERVAL, CMDLINE=CMDLINE, CONFIRM=CONFIRM, DAYSCAL=DAYSCAL, RETRO=RETRO, MAXWAIT=MAXWAIT, MAXRERUN=MAXRERUN, AUTOARCH=AUTOARCH, MAXDAYS=MAXDAYS, MAXRUNS=MAXRUNS, DAYS=DAYS, JAN=JAN, FEB=FEB, MAR=MAR, APR=APR, MAY=MAY, JUN=JUN, JUL=JUL, AUG=AUG, SEP=SEP, OCT=OCT, NOV=NOV, DEC=DEC, DAYS_AND_OR=DAYS_AND_OR, SHIFT=SHIFT, SHIFTNUM=SHIFTNUM, SYSDB=SYSDB, IND_CYCLIC=IND_CYCLIC, CREATION_USER=CREATION_USER, CREATION_DATE=CREATION_DATE, CREATION_TIME=CREATION_TIME, CHANGE_USERID=CHANGE_USERID, CHANGE_DATE=CHANGE_DATE, CHANGE_TIME=CHANGE_TIME, RULE_BASED_CALENDAR_RELATIONSHIP=RULE_BASED_CALENDAR_RELATIONSHIP, APPL_TYPE=APPL_TYPE, MULTY_AGENT=MULTY_AGENT, USE_INSTREAM_JCL=USE_INSTREAM_JCL, VERSION_OPCODE=VERSION_OPCODE, IS_CURRENT_VERSION=IS_CURRENT_VERSION, VERSION_SERIAL=VERSION_SERIAL, VERSION_HOST=VERSION_HOST, CYCLIC_TOLERANCE=CYCLIC_TOLERANCE, CYCLIC_TYPE=CYCLIC_TYPE, PARENT_FOLDER=PARENT_FOLDER)
    tree = ElementTree(job)
    job.text=" "
    return job
    
#createJob(JOBNAME="modjobName",APPLICATION="modapplicationName")
